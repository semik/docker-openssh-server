apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "ssh-and-nginx.fullname" . }}
  labels:
    {{- include "ssh-and-nginx.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "ssh-and-nginx.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "ssh-and-nginx.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "ssh-and-nginx.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}-sshd
          securityContext:
            {{- toYaml .Values.sshService.securityContext | nindent 12 }}
          image: "{{ .Values.sshImage.repository }}:{{ .Values.sshImage.tag }}"
          imagePullPolicy: {{ .Values.sshImage.pullPolicy }}
          env:
            - name: SSHD_ARGS
              value: "-d"
          ports:
            - name: ssh
              containerPort: 2022
              protocol: TCP
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: sshd-conf
              mountPath: /etc/ssh/ssh_host_rsa_key
              subPath: rsa_private
            - name: sshd-conf
              mountPath: /etc/ssh/ssh_host_rsa_key.pub
              subPath: rsa_public
            - name: sshd-conf
              mountPath: /home/czertainly/.ssh/authorized_keys
              subPath: authorized_keys
        - name: {{ .Chart.Name }}-www
          securityContext:
            {{- toYaml .Values.wwwService.securityContext | nindent 12 }}
          image: "{{ .Values.wwwImage.repository }}:{{ .Values.wwwImage.tag }}"
          imagePullPolicy: {{ .Values.wwwImage.pullPolicy }}
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          volumeMounts:
            - name: nginx-conf
              mountPath: /etc/nginx/conf.d/default.conf
              subPath: default.conf
            {{/* 2023/11/27 10:13:16 [emerg] 1#1: mkdir() "/var/cache/nginx/client_temp" failed (30: Read-only file system) */}}
            - name: nginx-cache
              mountPath: /var/cache/nginx/
            {{/* nginx: [emerg] open() "/var/run/nginx.pid" failed (30: Read-only file system) */}}
            - name: nginx-run
              mountPath: /var/run/
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      volumes:
      - name: nginx-conf
        configMap:
          name: nginx-conf
          items:
            - key: default.conf
              path: default.conf
      - name: nginx-cache
        emptyDir: {}
      - name: nginx-run
        emptyDir: {}
      - name: sshd-conf
        configMap:
          name: sshd-conf
          items:
            - key: rsa_private
              path: rsa_private
            - key: rsa_public
              path: rsa_public
            - key: authorized_keys
              path: authorized_keys
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
